#include <stdio.h>
#include <stdlib.h>
#include <sys/time.h>

// Global varialbes
#define TOSS_NUM 5
#define TOTAL_RESULTS 32

typedef struct _toss{
  char try[TOSS_NUM];
}toss;

typedef struct _toss_result{
  toss results[TOTAL_RESULTS];
  int pos;
}toss_result;

cilk int head(int num, toss_result * result);
cilk int tail(int num, toss_result * result);

cilk int head(int num, toss_result * result){
  int head_ret = 0;
  int tail_ret = 0;

  result->results[result->pos].try[num] = 1;
  if(TOSS_NUM > num){
    head_ret = spawn head(num + 1, result);
    tail_ret = spawn tail(num + 1, result);
    sync;
  }
  return 1;
}

cilk int tail(int num, toss_result * result){
  int head_ret = 0;
  int tail_ret = 0;

  result->results[result->pos].try[num] = 0;
  if(TOSS_NUM > num){
    head_ret = spawn head(num + 1, result);
    tail_ret = spawn tail(num + 1, result);
    sync;
  }
  return 0;
}


cilk int main(int argc, char * argv[]){
  //int cycle = 0;
  int head_ret = 0;
  int tail_ret = 0;

  toss_result result;
  result.pos = 0;
  
  head_ret = spawn head(0, &result);
  tail_ret = spawn tail(0, &result);
  sync;

  return 0;
}

